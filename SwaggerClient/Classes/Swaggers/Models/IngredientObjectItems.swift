//
// IngredientObjectItems.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** An object containing information for this specific item. */

public struct IngredientObjectItems: Codable {

    /** Item name as provided by brand owner or as shown on packaging */
    public var name: String?
    public var categories: [String]?
    /** An array containing nutrient informatio objects for this food item */
    public var nutrients: [IngredientObjectNutrients]?
    public var calorieConversionFactor: IngredientObjectCalorieConversionFactor?
    /** The multiplication factor used to calculate protein from nitrogen */
    public var proteinConversionFactor: Decimal?
    /** An array of objects containing the constituent parts of a food (e.g. bone is a component of meat) */
    public var components: [IngredientObjectComponents]?
    /** An array of objects containing information on discrete amounts of a food found in this item */
    public var portions: [IngredientObjectPortions]?
    /** Common name associated with this item. These generally clarify what the item is (e.g. when the brand name is \&quot;BRAND&#x27;s Spicy Enchilada\&quot; the common name may be \&quot;Chicken enchilada\&quot;) */
    public var commonName: String?
    /** Comments on any unusual aspects of this item. Examples might include unusual aspects of the food overall */
    public var footnote: String?
    /** The original search term that found this food item */
    public var searchTerm: String?
    /** A value that represents how similar the name of this food item is to the original search term. The lower the value the closer this item&#x27;s name is to the original search term. */
    public var score: String?

    public init(name: String? = nil, categories: [String]? = nil, nutrients: [IngredientObjectNutrients]? = nil, calorieConversionFactor: IngredientObjectCalorieConversionFactor? = nil, proteinConversionFactor: Decimal? = nil, components: [IngredientObjectComponents]? = nil, portions: [IngredientObjectPortions]? = nil, commonName: String? = nil, footnote: String? = nil, searchTerm: String? = nil, score: String? = nil) {
        self.name = name
        self.categories = categories
        self.nutrients = nutrients
        self.calorieConversionFactor = calorieConversionFactor
        self.proteinConversionFactor = proteinConversionFactor
        self.components = components
        self.portions = portions
        self.commonName = commonName
        self.footnote = footnote
        self.searchTerm = searchTerm
        self.score = score
    }

    public enum CodingKeys: String, CodingKey { 
        case name
        case categories
        case nutrients
        case calorieConversionFactor = "calorie_conversion_factor"
        case proteinConversionFactor = "protein_conversion_factor"
        case components
        case portions
        case commonName = "common_name"
        case footnote
        case searchTerm = "search_term"
        case score
    }

}
